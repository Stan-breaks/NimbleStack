package views

import "nimblestack/views/components"

type techStack struct {
name string
image string
description string
}

func list() []techStack {
var list []techStack
list = append(list, techStack{name: "Go", image: "/static/go.svg", description: "Fast and efficient backend language."})
list = append(list, techStack{name: "Templ", image: "/static/templ.svg", description: "Type-safe templating for Go."})
list = append(list, techStack{
name: "Tailwind CSS",
image: "/static/tailwind.svg",
description: "Utility-first CSS framework."})
list = append(list, techStack{
name: "HTMX",
image: "/static/htmx_logo.1.png",
description: "Dynamic, partial page updates."})
list = append(list, techStack{
name: "Alpine.js",
image: "/static/alpine.svg",
description: "Lightweight interactivity."})
list = append(list, techStack{
name: "sqlc",
image: "/static/sqlc.png",
description: "Generates type-safe Go code from SQL."})
list = append(list, techStack{
name: "SQLite",
image: "/static/sqlite.svg",
description: "Embedded SQL database.",
})
return list
}

templ Index() {
@Base("Home - Welcome", mainContent(list()))
}

templ mainContent(list []techStack) {
<div class="space-y-12 px-4 md:px-8 lg:px-16">
  <div class="mt-8">
    <h3 class="text-2xl font-semibold text-center text-gray-800">Interactive Counter</h3>
    <div class="mt-4 flex justify-center">
      @components.Counter()
    </div>
  </div>
  <!-- Getting Started Section -->
  <div class="p-6 bg-white rounded-lg shadow-lg text-center">
    <h3 class="text-2xl font-semibold text-gray-800">Getting Started</h3>
    <p class="mt-3 text-gray-600">
      Explore the code, update components, and build something amazing with our modern stack.
    </p>
  </div>
  <!-- Technology Stack Overview -->
  <div class="p-6 bg-gray-50 rounded-lg shadow-lg">
    <h3 class="text-2xl font-semibold text-center text-gray-800 mb-6">Our Technology Stack</h3>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
      for _, l := range list {
      @components.TechStackItem(l.name, l.image, l.description)
      }
    </div>
    <!-- Navigation to Login Page -->
    @components.Button("Go to login", "/auth")
  </div>
</div>
}
